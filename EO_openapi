{
  "openapi": "3.1.0",
  "info": {
    "title": "EmailOctopus v2 API",
    "description": "# Introduction\n\nThe EmailOctopus API allows you to manage resources and perform actions within the platform programmatically. You'll need to <a href=\"https://emailoctopus.com/account/sign-up\" target=\"_blank\">create an account</a> before using the API, if you don't already have one.\n\nThe API is designed around <a href=\"https://en.wikipedia.org/wiki/REST\" target=\"_blank\">REST</a> principles. It has a predictable URL structure based on resources, accepts <a href=\"https://www.json.org/json-en.html\" target=\"_blank\">JSON-encoded</a> request bodies, returns JSON-encoded responses and uses standard HTTP response codes, authentication and verbs.\n\nThe base URL for the API is https://api.emailoctopus.com.\n\n# Authentication\nTo use the API, you'll need to generate an API key. You can do this in your <a href=\"https://emailoctopus.com/developer/api-keys\" target=\"_blank\">account settings</a>. If you have an API key created prior to the release of API v2 (labelled 'legacy') you'll need to generate a new API key. New API keys are compatible with all versions of the API.\n\nThe API uses bearer authentication to authenticate requests. Authenticate your request by including the following header:\n```\nAuthorization: Bearer {token}\n```\n\nFor example, using curl:\n```\ncurl https://api.emailoctopus.com/lists/ -H \"Authorization: Bearer {token}\"\n```\n\nIf you see a JSON-formatted response with your list details, that's great! That means you can connect to the API, and your authentication token works.\n\nIf you encounter a JSON error response, refer to the `type` field for a link to detailed documentation. For non-JSON errors, the request likely didn't reach the server. In that case, double-check the URL and verify that your request is correctly formatted.\n\n# Rate limiting\nRequests to the API are subject to a rate limit, which is implemented using the <a href=\"https://en.wikipedia.org/wiki/Token_bucket\" target=\"_blank\">token bucket algorithm</a>. Each request consumes one token and your bucket holds up to 100 tokens. Tokens are replenished at a rate of 10 per second. To check your remaining tokens, refer to the `X-RateLimiting-Remaining` header in the response.\n\nThis system enables a steady request rate of up to 10 per second or a burst of up to 100 requests in a single instance if needed.\n\nIf your account exceeds the rate limit, the request will return a [429 HTTP status code](https://emailoctopus.com/api-documentation/v2#too-many-requests).\n\n# Pagination\nWhen you request a collection of entities, such as contacts belonging to a list, the data will be paginated rather than returned all at once. Each response will contain a maximum of 100 results in the `data` attribute.\n\nPagination information is included in the response `paging` attribute. This data will contain `next` attributes, with a URL and a `starting_after` cursor. The cursor serves as a link to the next page. You can use the cursor as a `starting_after` query string parameter to navigate to the next page or follow the provided URL in the JSON structure.\n\nHere's an example of what the `paging` attribute looks like:\n```\n\"paging\": {\n    \"next\": {\n        \"url\": \"https://api.emailoctopus.com/lists/{list_id}/contacts?starting_after=WyIyMDI0LTA1LTA0VDE5OjQ3OjAyKzAwOjAwIiwiZmE5NjQ5YjYtNjlkYy0xMWVmLTk0ZjItNDVlNDRkOTJhOWExIl0&limit=100\",\n        \"starting_after\": \"WyIyMDI0LTA1LTA0VDE5OjQ3OjAyKzAwOjAwIiwiZmE5NjQ5YjYtNjlkYy0xMWVmLTk0ZjItNDVlNDRkOTJhOWExIl0\"\n    }\n }\n```\nYou can add the cursor to your request URL by including the `starting_after` query string parameter, like this:\n```\nhttps://api.emailoctopus.com/lists/{list_id}/contacts?starting_after=WyIyMDI0LTA1LTA0VDE5OjQ3OjAyKzAwOjAwIiwiZmE5NjQ5YjYtNjlkYy0xMWVmLTk0ZjItNDVlNDRkOTJhOWExIl0\n```\n\nThe cursor should always be provided exactly as it was returned in a previous request. Avoid deconstructing the cursor and relying on any data inside it, as the implementation of the cursor is subject to change.\n\n# Errors\nError are returned in a standardised format following <a href=\"https://datatracker.ietf.org/doc/html/rfc7807\" target=\"_blank\">RFC 7807</a>. For example:\n\n```\n{\n    \"title\": \"An error occurred.\",\n    \"detail\": \"Bad request.\",\n    \"status\": 400,\n    \"type\": \"https://emailoctopus.com/api-documentation/v2#bad-request\"\n}\n```\n\nYou can use the `type` value to navigate to the documentation for more details about the specific error.\n\nYou may also encounter validation errors, which will return a 422 HTTP status code and a payload formatted according to <a href=\"https://www.rfc-editor.org/rfc/rfc9457.html\" target=\"_blank\">RFC 9457</a>.\n```\n{\n    \"title\": \"An error occurred.\",\n    \"detail\": \"Unprocessable content.\",\n    \"status\": 422,\n    \"errors\": [\n         {\n            \"detail\": \"This value should not be blank.\",\n            \"pointer\": \"/email_address\"\n         }\n    ],\n    \"type\": \"https://emailoctopus.com/api-documentation/v2#unprocessable-content\"\n}\n```\n\nIn the following sections, you can find more information about each type of error.\n\n## access-denied\nYou do not have permission to access the requested entity, such as trying to get the contacts in a list belonging to another account.\n\nCheck that the API key you're using belongs to the account you're trying to access data in. You can verify this by navigating to the account's <a href=\"https://emailoctopus.com/developer/api-keys\" target=\"_blank\">API keys</a> and checking there's a key ending in the same four characters.\n\n## already-exists\nYou are attempting to create an entity that already exists, such as creating a tag on a list that already contains that tag, or adding a contact to a list that already includes that contact.\n\nYou can fix this by checking if the entity already exists before you attempt to create it. Or you may wish to handle the error gracefully in your code and update the existing resource when a duplicate is spotted.\n\nSome endpoints, such as the [update contact](#tag/Contact/operation/api_lists_list_idcontacts_contact_id_put) endpoint, support an *upsert* operation. An upsert allows you to either update the entity if it exists or create a new one if it doesn't. Consider using this feature where applicable.\n\n## bad-request\nThe request body is not in the format expected. Check that the request body is valid JSON.\n\n## conflict\nThis request conflicts with the system state. <a href=\"https://help.emailoctopus.com/category/20-getting-in-touch\" target=\"_blank\">Get in touch</a> if you require further assistance.\n\n## internal-error\nThis error is returned when the API encounters an unexpected condition or an internal issue on the server. If you receive this error, it is probably not an issue with your request.\n\nIn some cases, retrying the request after some time may resolve the issue. We'll always be notified of the error via our internal tracking tools, but if the problem persists, <a href=\"https://help.emailoctopus.com/category/20-getting-in-touch\" target=\"_blank\">get in touch</a> with details about the error and we'll investigate.\n\n## not-found\nThe resource you're trying to access or modify could not be found. This error is typically caused by using an invalid or incorrect identifier, such as a list ID or contact ID that doesn't exist in your account.\n\nDouble-check the resource identifiers you're using in your request, and ensure they match the actual resources in your EmailOctopus account.\n\n## out-of-limits\nExecuting this operation would cause you to exceed your plan limits. See our <a href=\"https://emailoctopus.com/pricing#comparison\" target=\"_blank\">pricing comparison</a> for further details on these limits.\n\n## unauthorized\nThe API key provided in the request is either invalid or missing. Ensure that you're using the correct API key and that it is included in the request header as shown in the [authentication section](/api-documentation/v2#section/Authentication).\n\n## unprocessable-content\nThe JSON payload in your request body doesn't meet the required criteria. Check the errors attribute for details on the specific issues. It will include a pointer to the problematic attribute and an error description.\n\n## unsupported-media-type\nWhen making requests that require a JSON payload in the body, you must specify a `Content-Type` of `application/json`.\n\n## too-many-requests\nYour account has exceeded the rate limit. You can use the `X-RateLimit-Retry-After` header to determine when to make another request. See the [rate limiting section](/api-documentation/v2#section/Rate-limiting) section for further details.\n",
    "version": "2.0.0",
    "x-logo": {
      "url": "/build/images/logo.dc45d9f9.svg",
      "altText": "EmailOctopus Logo",
      "href": "#"
    }
  },
  "servers": [
    {
      "url": "https://api.emailoctopus.com",
      "description": ""
    }
  ],
  "paths": {
    "/automations/{automation_id}/queue": {
      "post": {
        "operationId": "api_automations_automation_idqueue_post",
        "tags": [
          "Automation"
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#conflict"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource already exists."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 409
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unprocessable-content"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Unprocessable content."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 422
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Start an automation for a contact",
        "description": "Start an automation for a specific contact. The automation must have the **Started via API** trigger type. A contact can only trigger an automation once, unless you've enabled **Allow contacts to repeat** in the automation's settings.",
        "parameters": [
          {
            "name": "automation_id",
            "in": "path",
            "description": "The ID of the automation.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "",
                "properties": {
                  "contact_id": {
                    "type": "string",
                    "description": "The ID of the contact.",
                    "example": "00000000-0000-0000-0000-000000000000"
                  }
                }
              }
            }
          },
          "required": false
        },
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.emailoctopus.com/automations/00000000-0000-0000-0000-000000000000/queue \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"contact_id\":\"00000000-0000-0000-0000-000000000000\"}'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/automations/00000000-0000-0000-0000-000000000000/queue\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"contact_id\\\":\\\"00000000-0000-0000-0000-000000000000\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/automations/00000000-0000-0000-0000-000000000000/queue\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type\": \"application/json\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({contact_id: '00000000-0000-0000-0000-000000000000'}));\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = JSON.stringify({\n  \"contact_id\": \"00000000-0000-0000-0000-000000000000\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.emailoctopus.com/automations/00000000-0000-0000-0000-000000000000/queue\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"contact_id\\\":\\\"00000000-0000-0000-0000-000000000000\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/automations/00000000-0000-0000-0000-000000000000/queue\")\n  .post(body)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/automations/00000000-0000-0000-0000-000000000000/queue\"\n\n\tpayload := strings.NewReader(\"{\\\"contact_id\\\":\\\"00000000-0000-0000-0000-000000000000\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\npayload = \"{\\\"contact_id\\\":\\\"00000000-0000-0000-0000-000000000000\\\"}\"\n\nheaders = {\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/automations/00000000-0000-0000-0000-000000000000/queue\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      }
    },
    "/campaigns": {
      "get": {
        "operationId": "api_campaigns_get",
        "tags": [
          "Campaign"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign.collection"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get all campaigns",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of results per page.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "default": "100"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "100"
          },
          {
            "name": "starting_after",
            "in": "query",
            "description": "Cursor that points to the end of the page.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd"
          }
        ],
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.emailoctopus.com/campaigns?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/campaigns?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/campaigns?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.emailoctopus.com/campaigns?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/campaigns?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/campaigns?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/campaigns?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      }
    },
    "/campaigns/{campaign_id}": {
      "get": {
        "operationId": "api_campaigns_campaign_id_get",
        "tags": [
          "Campaign"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign-get"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get campaign",
        "description": "",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The ID of the campaign.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000 \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/campaigns/00000000-0000-0000-0000-000000000000\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/campaigns/00000000-0000-0000-0000-000000000000\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      }
    },
    "/campaigns/{campaign_id}/reports": {
      "get": {
        "operationId": "api_campaigns_campaign_idreports_get",
        "tags": [
          "Campaign"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignReportContact.collection-get.report"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Campaign contact reports",
        "description": "",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The ID of the campaign.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of results per page.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "default": "100"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "100"
          },
          {
            "name": "starting_after",
            "in": "query",
            "description": "Cursor that points to the end of the page.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd"
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the report.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "enum": [
                "bounced",
                "clicked",
                "complained",
                "opened",
                "sent",
                "unsubscribed",
                "not-opened",
                "not-clicked"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "bounced"
          }
        ],
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd&status=bounced' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd&status=bounced\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/campaigns/00000000-0000-0000-0000-000000000000/reports?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd&status=bounced\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd&status=bounced\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd&status=bounced\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd&status=bounced\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/campaigns/00000000-0000-0000-0000-000000000000/reports?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd&status=bounced\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      }
    },
    "/campaigns/{campaign_id}/reports/links": {
      "get": {
        "operationId": "api_campaigns_campaign_idreportslinks_get",
        "tags": [
          "Campaign"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignReportLink.collection-get"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Campaign links report",
        "description": "",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The ID of the campaign.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports/links \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports/links\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/campaigns/00000000-0000-0000-0000-000000000000/reports/links\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports/links\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports/links\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports/links\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/campaigns/00000000-0000-0000-0000-000000000000/reports/links\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      }
    },
    "/campaigns/{campaign_id}/reports/summary": {
      "get": {
        "operationId": "api_campaigns_campaign_idreportssummary_get",
        "tags": [
          "Campaign"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignSummaryReport"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Campaign summary report",
        "description": "",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The ID of the campaign.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports/summary \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports/summary\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/campaigns/00000000-0000-0000-0000-000000000000/reports/summary\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports/summary\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports/summary\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports/summary\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/campaigns/00000000-0000-0000-0000-000000000000/reports/summary\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      }
    },
    "/lists/{list_id}/contacts": {
      "get": {
        "operationId": "api_lists_list_idcontacts_get",
        "tags": [
          "Contact"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/List.contacts.collection-get"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get contacts",
        "description": "",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of results per page.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "default": "100"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "100"
          },
          {
            "name": "starting_after",
            "in": "query",
            "description": "Cursor that points to the end of the page.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "The tag associated with the contact.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "vip"
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the contact.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "enum": [
                "SUBSCRIBED",
                "UNSUBSCRIBED",
                "PENDING"
              ],
              "default": "SUBSCRIBED"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "SUBSCRIBED"
          },
          {
            "name": "created_at.lte",
            "in": "query",
            "description": "Filter by creation date - less than or equal to. ISO 8601 date format.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "2024-01-19T12:14:28Z"
          },
          {
            "name": "created_at.gte",
            "in": "query",
            "description": "Filter by creation date - greater than or equal to. ISO 8601 date format.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "2024-01-19T12:14:28Z"
          },
          {
            "name": "last_updated_at.lte",
            "in": "query",
            "description": "Filter by update date - less than or equal to. ISO 8601 date format.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "2024-01-19T12:14:28Z"
          },
          {
            "name": "last_updated_at.gte",
            "in": "query",
            "description": "Filter by update date - greater than or equal to. ISO 8601 date format.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "2024-01-19T12:14:28Z"
          }
        ],
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd&tag=vip&status=SUBSCRIBED&created_at.lte=2024-01-19T12%3A14%3A28Z&created_at.gte=2024-01-19T12%3A14%3A28Z&last_updated_at.lte=2024-01-19T12%3A14%3A28Z&last_updated_at.gte=2024-01-19T12%3A14%3A28Z' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd&tag=vip&status=SUBSCRIBED&created_at.lte=2024-01-19T12%3A14%3A28Z&created_at.gte=2024-01-19T12%3A14%3A28Z&last_updated_at.lte=2024-01-19T12%3A14%3A28Z&last_updated_at.gte=2024-01-19T12%3A14%3A28Z\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000/contacts?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd&tag=vip&status=SUBSCRIBED&created_at.lte=2024-01-19T12%3A14%3A28Z&created_at.gte=2024-01-19T12%3A14%3A28Z&last_updated_at.lte=2024-01-19T12%3A14%3A28Z&last_updated_at.gte=2024-01-19T12%3A14%3A28Z\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd&tag=vip&status=SUBSCRIBED&created_at.lte=2024-01-19T12%3A14%3A28Z&created_at.gte=2024-01-19T12%3A14%3A28Z&last_updated_at.lte=2024-01-19T12%3A14%3A28Z&last_updated_at.gte=2024-01-19T12%3A14%3A28Z\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd&tag=vip&status=SUBSCRIBED&created_at.lte=2024-01-19T12%3A14%3A28Z&created_at.gte=2024-01-19T12%3A14%3A28Z&last_updated_at.lte=2024-01-19T12%3A14%3A28Z&last_updated_at.gte=2024-01-19T12%3A14%3A28Z\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd&tag=vip&status=SUBSCRIBED&created_at.lte=2024-01-19T12%3A14%3A28Z&created_at.gte=2024-01-19T12%3A14%3A28Z&last_updated_at.lte=2024-01-19T12%3A14%3A28Z&last_updated_at.gte=2024-01-19T12%3A14%3A28Z\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/lists/00000000-0000-0000-0000-000000000000/contacts?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd&tag=vip&status=SUBSCRIBED&created_at.lte=2024-01-19T12%3A14%3A28Z&created_at.gte=2024-01-19T12%3A14%3A28Z&last_updated_at.lte=2024-01-19T12%3A14%3A28Z&last_updated_at.gte=2024-01-19T12%3A14%3A28Z\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      },
      "put": {
        "operationId": "api_lists_list_idcontacts_put",
        "tags": [
          "Contact"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListContact-get"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#conflict"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource already exists."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 409
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unprocessable-content"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Unprocessable content."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 422
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create or update contact",
        "description": "This is an *upsert* endpoint. If the contact does not exist, it will be created. If the contact already exists, it will be updated.",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                  "email_address"
                ],
                "properties": {
                  "email_address": {
                    "type": "string",
                    "description": "The email address of the contact.",
                    "example": "otto@example.com"
                  },
                  "fields": {
                    "type": "object",
                    "description": "An object containing key/value pairs of field values, using the field's tag as the key.",
                    "additionalProperties": {
                      "type": "string",
                      "description": "Field value."
                    },
                    "example": {
                      "referral": "Otto",
                      "birthday": "2015-12-01"
                    }
                  },
                  "tags": {
                    "type": "object",
                    "description": "An object containing key/value pairs, where the key is the tag name and the value is true to add the tag or false to remove it. Tags that are not referenced in the object will not be updated.",
                    "additionalProperties": {
                      "type": "boolean"
                    },
                    "example": {
                      "vip": true,
                      "tagToRemove": false
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the contact.",
                    "example": "subscribed",
                    "enum": [
                      "subscribed",
                      "unsubscribed",
                      "pending"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        },
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"email_address\":\"otto@example.com\",\"fields\":{\"referral\":\"Otto\",\"birthday\":\"2015-12-01\"},\"tags\":{\"vip\":true,\"tagToRemove\":false},\"status\":\"subscribed\"}'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_POSTFIELDS => \"{\\\"email_address\\\":\\\"otto@example.com\\\",\\\"fields\\\":{\\\"referral\\\":\\\"Otto\\\",\\\"birthday\\\":\\\"2015-12-01\\\"},\\\"tags\\\":{\\\"vip\\\":true,\\\"tagToRemove\\\":false},\\\"status\\\":\\\"subscribed\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"PUT\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000/contacts\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type\": \"application/json\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({\n  email_address: 'otto@example.com',\n  fields: {referral: 'Otto', birthday: '2015-12-01'},\n  tags: {vip: true, tagToRemove: false},\n  status: 'subscribed'\n}));\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = JSON.stringify({\n  \"email_address\": \"otto@example.com\",\n  \"fields\": {\n    \"referral\": \"Otto\",\n    \"birthday\": \"2015-12-01\"\n  },\n  \"tags\": {\n    \"vip\": true,\n    \"tagToRemove\": false\n  },\n  \"status\": \"subscribed\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"email_address\\\":\\\"otto@example.com\\\",\\\"fields\\\":{\\\"referral\\\":\\\"Otto\\\",\\\"birthday\\\":\\\"2015-12-01\\\"},\\\"tags\\\":{\\\"vip\\\":true,\\\"tagToRemove\\\":false},\\\"status\\\":\\\"subscribed\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts\")\n  .put(body)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts\"\n\n\tpayload := strings.NewReader(\"{\\\"email_address\\\":\\\"otto@example.com\\\",\\\"fields\\\":{\\\"referral\\\":\\\"Otto\\\",\\\"birthday\\\":\\\"2015-12-01\\\"},\\\"tags\\\":{\\\"vip\\\":true,\\\"tagToRemove\\\":false},\\\"status\\\":\\\"subscribed\\\"}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\npayload = \"{\\\"email_address\\\":\\\"otto@example.com\\\",\\\"fields\\\":{\\\"referral\\\":\\\"Otto\\\",\\\"birthday\\\":\\\"2015-12-01\\\"},\\\"tags\\\":{\\\"vip\\\":true,\\\"tagToRemove\\\":false},\\\"status\\\":\\\"subscribed\\\"}\"\n\nheaders = {\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"PUT\", \"/lists/00000000-0000-0000-0000-000000000000/contacts\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      },
      "post": {
        "operationId": "api_lists_list_idcontacts_post",
        "tags": [
          "Contact"
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListContact-get"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#conflict"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource already exists."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 409
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unprocessable-content"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Unprocessable content."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 422
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create contact",
        "description": "",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                  "email_address"
                ],
                "properties": {
                  "email_address": {
                    "type": "string",
                    "description": "The email address of the contact.",
                    "example": "otto@example.com"
                  },
                  "fields": {
                    "type": "object",
                    "description": "An object containing key/value pairs of field values, using the field's tag as the key.",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": [
                            "string"
                          ],
                          "description": "Field value."
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Field value."
                        }
                      ]
                    },
                    "example": {
                      "referral": "Otto",
                      "birthday": "2015-12-01"
                    }
                  },
                  "tags": {
                    "type": "array",
                    "description": "An array of tags associated with the contact.",
                    "items": {
                      "type": "string",
                      "example": "vip"
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the contact.",
                    "example": "subscribed",
                    "enum": [
                      "subscribed",
                      "unsubscribed",
                      "pending"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        },
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"email_address\":\"otto@example.com\",\"fields\":{\"referral\":\"Otto\",\"birthday\":\"2015-12-01\"},\"tags\":[\"vip\"],\"status\":\"subscribed\"}'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"email_address\\\":\\\"otto@example.com\\\",\\\"fields\\\":{\\\"referral\\\":\\\"Otto\\\",\\\"birthday\\\":\\\"2015-12-01\\\"},\\\"tags\\\":[\\\"vip\\\"],\\\"status\\\":\\\"subscribed\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000/contacts\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type\": \"application/json\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({\n  email_address: 'otto@example.com',\n  fields: {referral: 'Otto', birthday: '2015-12-01'},\n  tags: ['vip'],\n  status: 'subscribed'\n}));\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = JSON.stringify({\n  \"email_address\": \"otto@example.com\",\n  \"fields\": {\n    \"referral\": \"Otto\",\n    \"birthday\": \"2015-12-01\"\n  },\n  \"tags\": [\n    \"vip\"\n  ],\n  \"status\": \"subscribed\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"email_address\\\":\\\"otto@example.com\\\",\\\"fields\\\":{\\\"referral\\\":\\\"Otto\\\",\\\"birthday\\\":\\\"2015-12-01\\\"},\\\"tags\\\":[\\\"vip\\\"],\\\"status\\\":\\\"subscribed\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts\")\n  .post(body)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts\"\n\n\tpayload := strings.NewReader(\"{\\\"email_address\\\":\\\"otto@example.com\\\",\\\"fields\\\":{\\\"referral\\\":\\\"Otto\\\",\\\"birthday\\\":\\\"2015-12-01\\\"},\\\"tags\\\":[\\\"vip\\\"],\\\"status\\\":\\\"subscribed\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\npayload = \"{\\\"email_address\\\":\\\"otto@example.com\\\",\\\"fields\\\":{\\\"referral\\\":\\\"Otto\\\",\\\"birthday\\\":\\\"2015-12-01\\\"},\\\"tags\\\":[\\\"vip\\\"],\\\"status\\\":\\\"subscribed\\\"}\"\n\nheaders = {\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/lists/00000000-0000-0000-0000-000000000000/contacts\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      }
    },
    "/lists/{list_id}/contacts/{contact_id}": {
      "get": {
        "operationId": "api_lists_list_idcontacts_contact_id_get",
        "tags": [
          "Contact"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListContact-get"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get contact",
        "description": "",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "contact_id",
            "in": "path",
            "description": "The ID of the contact, or an MD5 hash of the lowercase version of the contact's email address.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "631251b876fece73bc9dd647fe596d5f"
          }
        ],
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      },
      "put": {
        "operationId": "api_lists_list_idcontacts_contact_id_put",
        "tags": [
          "Contact"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListContact-get"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#conflict"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource already exists."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 409
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unprocessable-content"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Unprocessable content."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 422
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update contact",
        "description": "",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "contact_id",
            "in": "path",
            "description": "The ID of the contact, or an MD5 hash of the lowercase version of the contact's email address.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "631251b876fece73bc9dd647fe596d5f"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                  "email_address"
                ],
                "properties": {
                  "email_address": {
                    "type": "string",
                    "description": "The email address of the contact.",
                    "example": "otto@example.com"
                  },
                  "fields": {
                    "type": "object",
                    "description": "An object containing key/value pairs of field values, using the field's tag as the key.",
                    "additionalProperties": {
                      "type": "string",
                      "description": "Field value."
                    },
                    "example": {
                      "referral": "Otto",
                      "birthday": "2015-12-01"
                    }
                  },
                  "tags": {
                    "type": "object",
                    "description": "An object containing key/value pairs, where the key is the tag name and the value is true to add the tag or false to remove it. Tags that are not referenced in the object will not be updated.",
                    "additionalProperties": {
                      "type": "boolean"
                    },
                    "example": {
                      "vip": true,
                      "tagToRemove": false
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the contact.",
                    "example": "subscribed",
                    "enum": [
                      "subscribed",
                      "unsubscribed",
                      "pending"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        },
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"email_address\":\"otto@example.com\",\"fields\":{\"referral\":\"Otto\",\"birthday\":\"2015-12-01\"},\"tags\":{\"vip\":true,\"tagToRemove\":false},\"status\":\"subscribed\"}'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_POSTFIELDS => \"{\\\"email_address\\\":\\\"otto@example.com\\\",\\\"fields\\\":{\\\"referral\\\":\\\"Otto\\\",\\\"birthday\\\":\\\"2015-12-01\\\"},\\\"tags\\\":{\\\"vip\\\":true,\\\"tagToRemove\\\":false},\\\"status\\\":\\\"subscribed\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"PUT\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type\": \"application/json\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({\n  email_address: 'otto@example.com',\n  fields: {referral: 'Otto', birthday: '2015-12-01'},\n  tags: {vip: true, tagToRemove: false},\n  status: 'subscribed'\n}));\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = JSON.stringify({\n  \"email_address\": \"otto@example.com\",\n  \"fields\": {\n    \"referral\": \"Otto\",\n    \"birthday\": \"2015-12-01\"\n  },\n  \"tags\": {\n    \"vip\": true,\n    \"tagToRemove\": false\n  },\n  \"status\": \"subscribed\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"email_address\\\":\\\"otto@example.com\\\",\\\"fields\\\":{\\\"referral\\\":\\\"Otto\\\",\\\"birthday\\\":\\\"2015-12-01\\\"},\\\"tags\\\":{\\\"vip\\\":true,\\\"tagToRemove\\\":false},\\\"status\\\":\\\"subscribed\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\")\n  .put(body)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\"\n\n\tpayload := strings.NewReader(\"{\\\"email_address\\\":\\\"otto@example.com\\\",\\\"fields\\\":{\\\"referral\\\":\\\"Otto\\\",\\\"birthday\\\":\\\"2015-12-01\\\"},\\\"tags\\\":{\\\"vip\\\":true,\\\"tagToRemove\\\":false},\\\"status\\\":\\\"subscribed\\\"}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\npayload = \"{\\\"email_address\\\":\\\"otto@example.com\\\",\\\"fields\\\":{\\\"referral\\\":\\\"Otto\\\",\\\"birthday\\\":\\\"2015-12-01\\\"},\\\"tags\\\":{\\\"vip\\\":true,\\\"tagToRemove\\\":false},\\\"status\\\":\\\"subscribed\\\"}\"\n\nheaders = {\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"PUT\", \"/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      },
      "delete": {
        "operationId": "api_lists_list_idcontacts_contact_id_delete",
        "tags": [
          "Contact"
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete contact",
        "description": "",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "contact_id",
            "in": "path",
            "description": "The ID of the contact, or an MD5 hash of the lowercase version of the contact's email address.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "631251b876fece73bc9dd647fe596d5f"
          }
        ],
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request DELETE \\\n  --url https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\")\n  .delete(null)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"DELETE\", \"/lists/00000000-0000-0000-0000-000000000000/contacts/631251b876fece73bc9dd647fe596d5f\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      }
    },
    "/lists/{list_id}/fields": {
      "post": {
        "operationId": "api_lists_list_idfields_post",
        "tags": [
          "Field"
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListField"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#conflict"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource already exists."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 409
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unprocessable-content"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Unprocessable content."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 422
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create field",
        "description": "",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                  "label",
                  "tag",
                  "type"
                ],
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "A human readable label for the field.",
                    "example": "What is your hometown?"
                  },
                  "tag": {
                    "type": "string",
                    "description": "The ID used to reference the field in your emails.",
                    "example": "Hometown"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the field.",
                    "example": "text",
                    "enum": [
                      "text",
                      "number",
                      "date"
                    ]
                  },
                  "fallback": {
                    "type": "string",
                    "description": "A default value for the field, used when there is no other value available.",
                    "example": "Unknown"
                  }
                }
              }
            }
          },
          "required": false
        },
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/fields \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"label\":\"What is your hometown?\",\"tag\":\"Hometown\",\"type\":\"text\",\"fallback\":\"Unknown\"}'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/fields\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"label\\\":\\\"What is your hometown?\\\",\\\"tag\\\":\\\"Hometown\\\",\\\"type\\\":\\\"text\\\",\\\"fallback\\\":\\\"Unknown\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000/fields\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type\": \"application/json\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({\n  label: 'What is your hometown?',\n  tag: 'Hometown',\n  type: 'text',\n  fallback: 'Unknown'\n}));\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = JSON.stringify({\n  \"label\": \"What is your hometown?\",\n  \"tag\": \"Hometown\",\n  \"type\": \"text\",\n  \"fallback\": \"Unknown\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/fields\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"label\\\":\\\"What is your hometown?\\\",\\\"tag\\\":\\\"Hometown\\\",\\\"type\\\":\\\"text\\\",\\\"fallback\\\":\\\"Unknown\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/fields\")\n  .post(body)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/fields\"\n\n\tpayload := strings.NewReader(\"{\\\"label\\\":\\\"What is your hometown?\\\",\\\"tag\\\":\\\"Hometown\\\",\\\"type\\\":\\\"text\\\",\\\"fallback\\\":\\\"Unknown\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\npayload = \"{\\\"label\\\":\\\"What is your hometown?\\\",\\\"tag\\\":\\\"Hometown\\\",\\\"type\\\":\\\"text\\\",\\\"fallback\\\":\\\"Unknown\\\"}\"\n\nheaders = {\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/lists/00000000-0000-0000-0000-000000000000/fields\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      }
    },
    "/lists/{list_id}/fields/{tag}": {
      "put": {
        "operationId": "api_lists_list_idfields_tag_put",
        "tags": [
          "Field"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListField"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#conflict"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource already exists."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 409
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unprocessable-content"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Unprocessable content."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 422
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update field",
        "description": "",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "tag",
            "in": "path",
            "description": "A unique name for the tag.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "customer"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                  "label",
                  "tag",
                  "type"
                ],
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "A human readable label for the field.",
                    "example": "What is your hometown?"
                  },
                  "tag": {
                    "type": "string",
                    "description": "The ID used to reference the field in your emails.",
                    "example": "Hometown"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the field.",
                    "example": "text",
                    "enum": [
                      "text",
                      "number",
                      "date"
                    ]
                  },
                  "fallback": {
                    "type": "string",
                    "description": "A default value for the field, used when there is no other value available.",
                    "example": "Unknown"
                  }
                }
              }
            }
          },
          "required": false
        },
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/fields/customer \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"label\":\"What is your hometown?\",\"tag\":\"Hometown\",\"type\":\"text\",\"fallback\":\"Unknown\"}'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/fields/customer\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_POSTFIELDS => \"{\\\"label\\\":\\\"What is your hometown?\\\",\\\"tag\\\":\\\"Hometown\\\",\\\"type\\\":\\\"text\\\",\\\"fallback\\\":\\\"Unknown\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"PUT\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000/fields/customer\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type\": \"application/json\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({\n  label: 'What is your hometown?',\n  tag: 'Hometown',\n  type: 'text',\n  fallback: 'Unknown'\n}));\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = JSON.stringify({\n  \"label\": \"What is your hometown?\",\n  \"tag\": \"Hometown\",\n  \"type\": \"text\",\n  \"fallback\": \"Unknown\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/fields/customer\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"label\\\":\\\"What is your hometown?\\\",\\\"tag\\\":\\\"Hometown\\\",\\\"type\\\":\\\"text\\\",\\\"fallback\\\":\\\"Unknown\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/fields/customer\")\n  .put(body)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/fields/customer\"\n\n\tpayload := strings.NewReader(\"{\\\"label\\\":\\\"What is your hometown?\\\",\\\"tag\\\":\\\"Hometown\\\",\\\"type\\\":\\\"text\\\",\\\"fallback\\\":\\\"Unknown\\\"}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\npayload = \"{\\\"label\\\":\\\"What is your hometown?\\\",\\\"tag\\\":\\\"Hometown\\\",\\\"type\\\":\\\"text\\\",\\\"fallback\\\":\\\"Unknown\\\"}\"\n\nheaders = {\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"PUT\", \"/lists/00000000-0000-0000-0000-000000000000/fields/customer\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      },
      "delete": {
        "operationId": "api_lists_list_idfields_tag_delete",
        "tags": [
          "Field"
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete field",
        "description": "",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "tag",
            "in": "path",
            "description": "A unique name for the tag.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "customer"
          }
        ],
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request DELETE \\\n  --url https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/fields/customer \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/fields/customer\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000/fields/customer\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/fields/customer\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/fields/customer\")\n  .delete(null)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/fields/customer\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"DELETE\", \"/lists/00000000-0000-0000-0000-000000000000/fields/customer\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      }
    },
    "/lists": {
      "get": {
        "operationId": "api_lists_get",
        "tags": [
          "List"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/List.collection"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get all lists",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of results per page.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "default": "100"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "100"
          },
          {
            "name": "starting_after",
            "in": "query",
            "description": "Cursor that points to the end of the page.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd"
          }
        ],
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.emailoctopus.com/lists?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.emailoctopus.com/lists?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/lists?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      },
      "post": {
        "operationId": "api_lists_post",
        "tags": [
          "List"
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/List-get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unprocessable-content"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Unprocessable content."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 422
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create list",
        "description": "",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the list.",
                    "example": "New clients list",
                    "maxLength": 255
                  }
                }
              }
            }
          },
          "required": false
        },
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.emailoctopus.com/lists \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"New clients list\"}'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"name\\\":\\\"New clients list\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type\": \"application/json\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({name: 'New clients list'}));\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = JSON.stringify({\n  \"name\": \"New clients list\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.emailoctopus.com/lists\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"name\\\":\\\"New clients list\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists\")\n  .post(body)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"New clients list\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\npayload = \"{\\\"name\\\":\\\"New clients list\\\"}\"\n\nheaders = {\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/lists\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      }
    },
    "/lists/{list_id}": {
      "get": {
        "operationId": "api_lists_list_id_get",
        "tags": [
          "List"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/List-get"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get list",
        "description": "",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000 \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/lists/00000000-0000-0000-0000-000000000000\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      },
      "put": {
        "operationId": "api_lists_list_id_put",
        "tags": [
          "List"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/List-get"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unprocessable-content"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Unprocessable content."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 422
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update list",
        "description": "",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the list.",
                    "example": "New clients list",
                    "maxLength": 255
                  }
                }
              }
            }
          },
          "required": false
        },
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000 \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"New clients list\"}'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_POSTFIELDS => \"{\\\"name\\\":\\\"New clients list\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"PUT\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type\": \"application/json\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({name: 'New clients list'}));\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = JSON.stringify({\n  \"name\": \"New clients list\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"name\\\":\\\"New clients list\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000\")\n  .put(body)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"New clients list\\\"}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\npayload = \"{\\\"name\\\":\\\"New clients list\\\"}\"\n\nheaders = {\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"PUT\", \"/lists/00000000-0000-0000-0000-000000000000\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      },
      "delete": {
        "operationId": "api_lists_list_id_delete",
        "tags": [
          "List"
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a list",
        "description": "",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request DELETE \\\n  --url https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000 \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000\")\n  .delete(null)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"DELETE\", \"/lists/00000000-0000-0000-0000-000000000000\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      }
    },
    "/lists/{list_id}/tags": {
      "get": {
        "operationId": "api_lists_list_idtags_get",
        "tags": [
          "Tag"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/List.tags.collection-get"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get all tags",
        "description": "",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of results per page.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "default": "100"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "100"
          },
          {
            "name": "starting_after",
            "in": "query",
            "description": "Cursor that points to the end of the page.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false,
            "example": "WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd"
          }
        ],
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000/tags?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/lists/00000000-0000-0000-0000-000000000000/tags?limit=100&starting_after=WzE3MTUzNTkzODQwMDAsImIwMjdmM2U0LTI4OTAtMTFlZi05ZDU5LTNmMWYxMzc4MTMyYSJd\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      },
      "post": {
        "operationId": "api_lists_list_idtags_post",
        "tags": [
          "Tag"
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTag"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#conflict"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource already exists."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 409
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unprocessable-content"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Unprocessable content."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 422
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create tag",
        "description": "",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListTag"
              }
            }
          },
          "required": false
        },
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"tag\":\"my tag\"}'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"tag\\\":\\\"my tag\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000/tags\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type\": \"application/json\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({tag: 'my tag'}));\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = JSON.stringify({\n  \"tag\": \"my tag\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"tag\\\":\\\"my tag\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags\")\n  .post(body)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags\"\n\n\tpayload := strings.NewReader(\"{\\\"tag\\\":\\\"my tag\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\npayload = \"{\\\"tag\\\":\\\"my tag\\\"}\"\n\nheaders = {\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/lists/00000000-0000-0000-0000-000000000000/tags\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      }
    },
    "/lists/{list_id}/tags/{tag}": {
      "put": {
        "operationId": "api_lists_list_idtags_tag_put",
        "tags": [
          "Tag"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTag"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#conflict"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource already exists."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 409
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unprocessable-content"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Unprocessable content."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 422
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update tag",
        "description": "",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "tag",
            "in": "path",
            "description": "A unique name for the tag.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "customer"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListTag"
              }
            }
          },
          "required": false
        },
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags/customer \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"tag\":\"my tag\"}'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags/customer\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_POSTFIELDS => \"{\\\"tag\\\":\\\"my tag\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"PUT\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000/tags/customer\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type\": \"application/json\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({tag: 'my tag'}));\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = JSON.stringify({\n  \"tag\": \"my tag\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags/customer\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"tag\\\":\\\"my tag\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags/customer\")\n  .put(body)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags/customer\"\n\n\tpayload := strings.NewReader(\"{\\\"tag\\\":\\\"my tag\\\"}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\npayload = \"{\\\"tag\\\":\\\"my tag\\\"}\"\n\nheaders = {\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"PUT\", \"/lists/00000000-0000-0000-0000-000000000000/tags/customer\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      },
      "delete": {
        "operationId": "api_lists_list_idtags_tag_delete",
        "tags": [
          "Tag"
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#bad-request"
                      ],
                      "default": "https://emailoctopus.com/api-documentation/v2#bad-request",
                      "example": "https://emailoctopus.com/api-documentation/v2#bad-request"
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Bad request."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 400
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "detail"
                        ],
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "description": "A JSON Pointer [RFC6901] to the value in the request document that caused the error.",
                            "default": "name"
                          },
                          "parameter": {
                            "type": "string",
                            "description": "Name of the url parameter containing the error.",
                            "default": "list_id"
                          },
                          "detail": {
                            "type": "string",
                            "description": "Error description.",
                            "default": "This value should be between 1 and 100."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#unauthorized"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Invalid key."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#access-denied"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Access denied."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error type.",
                      "enum": [
                        "https://emailoctopus.com/api-documentation/v2#not-found"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "General error title.",
                      "default": "An error occurred."
                    },
                    "detail": {
                      "type": "string",
                      "description": "Error description.",
                      "default": "Resource not found."
                    },
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "default": 404
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete tag",
        "description": "",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "tag",
            "in": "path",
            "description": "A unique name for the tag.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false,
            "example": "customer"
          }
        ],
        "deprecated": false,
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request DELETE \\\n  --url https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags/customer \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
          },
          {
            "lang": "Php + Curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags/customer\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Node + Native",
            "source": "const http = require(\"https\");\n\nconst options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.emailoctopus.com\",\n  \"port\": null,\n  \"path\": \"/lists/00000000-0000-0000-0000-000000000000/tags/customer\",\n  \"headers\": {\n    \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags/customer\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags/customer\")\n  .delete(null)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags/customer\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Python + Python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.emailoctopus.com\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"DELETE\", \"/lists/00000000-0000-0000-0000-000000000000/tags/customer\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Automation": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the automation.",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "contact_id": {
            "type": "string",
            "description": "The ID of the contact.",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "Campaign-get": {
        "type": "object",
        "description": "Get details of a campaign.",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the campaign.",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "status": {
            "type": "string",
            "description": "The status of the campaign.",
            "example": "draft",
            "enum": [
              "draft",
              "sending",
              "sent",
              "error"
            ]
          },
          "name": {
            "type": "string",
            "description": "The name of the campaign.",
            "example": "New clients campaign",
            "maxLength": 255
          },
          "subject": {
            "type": "string",
            "description": "The subject of the campaign.",
            "example": "Hello",
            "maxLength": 255
          },
          "to": {
            "type": "array",
            "description": "The ids of the lists the campaign was sent to.",
            "items": {
              "type": "string",
              "example": [
                "00000000-0000-0000-0000-000000000000"
              ]
            }
          },
          "from": {
            "type": "object",
            "description": "The sender of the campaign.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name the campaign was sent from.",
                "example": "Otto Octopus"
              },
              "email_address": {
                "type": "string",
                "description": "The email address the campaign was sent from.",
                "example": "otto@example.com"
              }
            }
          },
          "content": {
            "type": "object",
            "description": "The content of the campaign.",
            "properties": {
              "html": {
                "type": "string",
                "description": "The campaign's HTML content.",
                "example": "<html>Foo Bar</html>"
              }
            }
          },
          "created_at": {
            "type": "string",
            "description": "When the campaign was created, in ISO 8601 format.",
            "example": "2015-12-01T12:59:37+00:00"
          },
          "sent_at": {
            "type": "string",
            "description": "When the campaign was sent, in ISO 8601 format.",
            "example": "2015-12-01T12:59:37+00:00"
          }
        }
      },
      "Campaign.collection": {
        "type": "object",
        "description": "Get a collection of Campaign items.",
        "deprecated": false,
        "properties": {
          "data": {
            "type": "array",
            "description": "Collection of Campaign items.",
            "items": {
              "$ref": "#/components/schemas/Campaign-get"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResource"
          }
        }
      },
      "CampaignReportContact.collection-get.report": {
        "type": "object",
        "description": "Get campaign contact reports.",
        "deprecated": false,
        "properties": {
          "status": {
            "type": "string",
            "description": "Event status.",
            "example": "opened"
          },
          "data": {
            "type": "array",
            "description": "Details.",
            "items": {
              "type": "object",
              "properties": {
                "contact_id": {
                  "type": "string",
                  "description": "The ID of the contact.",
                  "example": "00000000-0000-0000-0000-000000000000"
                },
                "contact_email_address": {
                  "type": "string",
                  "description": "The email address of the contact.",
                  "example": "otto@example.com"
                },
                "occurred_at": {
                  "type": "string",
                  "description": "When the click occurred, in ISO 8601 format.",
                  "example": "2015-12-01T12:59:37+00:00"
                }
              }
            }
          },
          "paging": {
            "type": "object",
            "properties": {
              "next": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "Next page url.",
                    "example": "https://api.emailoctopus.com/campaigns/00000000-0000-0000-0000-000000000000/reports?status=opened&limit=10&starting_after=WzE3MjI5OTU4MDQwMDAsIjhkMDkxYTVhLTVhZDYtMTFlZi1iNmU4LTA1NjU4NDdhN2NkYSJd"
                  },
                  "starting_after": {
                    "type": "string",
                    "description": "Cursor that points to the end of the page.",
                    "example": "WzE3MjI5OTU4MDQwMDAsIjhkMDkxYTVhLTVhZDYtMTFlZi1iNmU4LTA1NjU4NDdhN2NkYSJd"
                  }
                }
              }
            }
          }
        }
      },
      "CampaignReportLink.collection-get": {
        "type": "object",
        "description": "Get information on the performance of links in the campaign.",
        "deprecated": false,
        "properties": {
          "data": {
            "type": "array",
            "description": "Collection of Campaign items.",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "Next page url.",
                  "example": "https://example.com/promo-1"
                },
                "clicked_total": {
                  "type": "int",
                  "description": "The number of total clicks.",
                  "example": 10
                },
                "clicked_unique": {
                  "type": "int",
                  "description": "The number of unique clicks.",
                  "example": 7
                }
              }
            }
          }
        }
      },
      "CampaignSummaryReport": {
        "type": "object",
        "description": "Get a summary of the campaign.",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the campaign.",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "sent": {
            "type": "int",
            "description": "The number of contacts that were sent to.",
            "example": 200
          },
          "bounced": {
            "type": "object",
            "description": "Statistics related to bounces.",
            "properties": {
              "hard": {
                "type": "int",
                "description": "The number of contacts who hard bounced.",
                "example": 10
              },
              "soft": {
                "type": "int",
                "description": "The number of contacts who soft bounced.",
                "example": 5
              }
            }
          },
          "opened": {
            "type": "object",
            "description": "Statistics related to opens.",
            "properties": {
              "total": {
                "type": "int",
                "description": "The number of all opens.",
                "example": 110
              },
              "unique": {
                "type": "int",
                "description": "The number of unique opens.",
                "example": 85
              }
            }
          },
          "clicked": {
            "type": "object",
            "description": "Statistics related to clicks.",
            "properties": {
              "total": {
                "type": "int",
                "description": "The number of all opens.",
                "example": 110
              },
              "unique": {
                "type": "int",
                "description": "The number of unique opens.",
                "example": 85
              }
            }
          },
          "complained": {
            "type": "int",
            "description": "The number of contacts who complained.",
            "example": 50
          },
          "unsubscribed": {
            "type": "int",
            "description": "The number of contacts who unsubscribed.",
            "example": 25
          }
        }
      },
      "List-get": {
        "type": "object",
        "description": "Get a single List item.",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the list.",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "name": {
            "type": "string",
            "description": "The name of the list.",
            "example": "New clients list",
            "maxLength": 255
          },
          "double_opt_in": {
            "type": "boolean",
            "description": "If double opt-in has been enabled on the list.",
            "example": false
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "List of available fields",
              "properties": {
                "tag": {
                  "type": "string",
                  "description": "The ID used to reference the field in your emails.",
                  "example": "EmailAddress"
                },
                "type": {
                  "type": "string",
                  "description": "The type of the field.",
                  "enum": [
                    "NUMBER",
                    "TEXT",
                    "DATE"
                  ],
                  "example": "TEXT"
                },
                "label": {
                  "type": "string",
                  "description": "A human readable label for the field.",
                  "example": "Email address"
                },
                "fallback": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "A default value for the field, used when there is no other value available."
                }
              }
            }
          },
          "tags": {
            "type": "array",
            "description": "The summary counts of the list.",
            "items": {
              "type": "string",
              "example": "welcome"
            }
          },
          "counts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pending": {
                  "type": "integer",
                  "description": "The number of pending contacts in the list.",
                  "example": 0
                },
                "subscribed": {
                  "type": "integer",
                  "description": "The number of subscribed contacts in the list.",
                  "example": 0
                },
                "unsubscribed": {
                  "type": "integer",
                  "description": "The number of unsubscribed contacts in the list.",
                  "example": 0
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "description": "When the list was created, in ISO 8601 format.",
            "example": "2015-12-01T12:59:37+00:00"
          },
          "last_updated_at": {
            "type": "string",
            "description": "When the list was updated, in ISO 8601 format.",
            "example": "2015-12-01T12:59:37+00:00"
          }
        },
        "required": [
          "name"
        ]
      },
      "List.collection": {
        "type": "object",
        "description": "Get a collection of List items.",
        "deprecated": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/List-get"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResource"
          }
        }
      },
      "List.contacts.collection-get": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "data": {
            "type": "array",
            "description": "Collection of contacts.",
            "items": {
              "$ref": "#/components/schemas/ListContact-get"
            }
          },
          "paging": {
            "type": "object",
            "properties": {
              "next": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "Next page url.",
                    "example": "https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/contacts?limit=10&starting_after=WzIsIjIwMjQtMDMtMTRUMTA6MTU6MjcrMDA6MDAiXQ"
                  },
                  "starting_after": {
                    "type": "string",
                    "description": "Cursor that points to the end of the page.",
                    "example": "WzIsIjIwMjQtMDMtMTRUMTA6MTU6MjcrMDA6MDAiXQ"
                  }
                }
              }
            }
          }
        }
      },
      "List.tags.collection-get": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "data": {
            "type": "array",
            "description": "Collection of tags.",
            "items": {
              "$ref": "#/components/schemas/ListTag"
            }
          },
          "paging": {
            "type": "object",
            "properties": {
              "next": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "Next page url.",
                    "example": "https://api.emailoctopus.com/lists/00000000-0000-0000-0000-000000000000/tags?limit=10&starting_after=WzIsIjIwMjQtMDMtMTRUMTA6MTU6MjcrMDA6MDAiXQ"
                  },
                  "starting_after": {
                    "type": "string",
                    "description": "Cursor that points to the end of the page.",
                    "example": "WzIsIjIwMjQtMDMtMTRUMTA6MTU6MjcrMDA6MDAiXQ"
                  }
                }
              }
            }
          }
        }
      },
      "ListContact-get": {
        "type": "object",
        "description": "Get details of a contact of a list.",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the contact.",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "email_address": {
            "type": "string",
            "description": "The email address of the contact.",
            "example": "otto@example.com"
          },
          "fields": {
            "type": "object",
            "description": "An object containing key/value pairs of field values, using the field's tag as the key.",
            "additionalProperties": {
              "type": "string",
              "description": "Field value."
            },
            "example": {
              "referral": "Otto",
              "birthday": "2015-12-01"
            }
          },
          "tags": {
            "type": "array",
            "description": "An array of tags associated with the contact.",
            "items": {
              "type": "string",
              "example": "vip"
            }
          },
          "status": {
            "type": "string",
            "description": "The status of the contact.",
            "example": "subscribed",
            "enum": [
              "subscribed",
              "unsubscribed",
              "pending"
            ]
          },
          "created_at": {
            "type": "string",
            "description": "When the contact was created, in ISO 8601 format.",
            "example": "2015-12-01T12:59:37+00:00"
          },
          "last_updated_at": {
            "type": "string",
            "description": "When the contact was last updated, in ISO 8601 format.",
            "example": "2015-12-01T12:59:37+00:00"
          }
        },
        "required": [
          "email_address"
        ]
      },
      "ListField": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "label",
          "tag",
          "type"
        ],
        "properties": {
          "label": {
            "type": "string",
            "description": "A human readable label for the field.",
            "example": "What is your hometown?"
          },
          "tag": {
            "type": "string",
            "description": "The ID used to reference the field in your emails.",
            "example": "Hometown"
          },
          "type": {
            "type": "string",
            "description": "The type of the field.",
            "example": "text",
            "enum": [
              "text",
              "number",
              "date"
            ]
          },
          "fallback": {
            "type": "string",
            "description": "A default value for the field, used when there is no other value available.",
            "example": "Unknown"
          }
        }
      },
      "ListTag": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "tag": {
            "type": "string",
            "description": "The name of the tag.",
            "example": "my tag"
          }
        }
      },
      "PagingNextResource": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "url": {
            "type": "string",
            "description": "Next page url.",
            "example": "https://api.emailoctopus.com/lists?limit=10&starting_after=WyJiOWYyNjA5OC1kZjcxLTExZWUtOTQ4Zi00Yjc0NTg4MjVjYzAiXQ"
          },
          "starting_after": {
            "type": "string",
            "description": "Cursor that points to the end of the page.",
            "example": "WyJiOWYyNjA5OC1kZjcxLTExZWUtOTQ4Zi00Yjc0NTg4MjVjYzAiXQ"
          }
        }
      },
      "PagingResource": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "next": {
            "$ref": "#/components/schemas/PagingNextResource"
          }
        }
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "api_key": {
        "type": "http",
        "description": "You can obtain your API key at https://api.emailoctopus.com/developer/api-keys/create",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "tags": [
    {
      "name": "Automation",
      "description": "An automation is a sequence of automated steps triggered by an event, such as when a contact subscribes to a list or is tagged.\nAutomations allow you to automatically send emails, update fields, apply tags and more.\n"
    },
    {
      "name": "Campaign",
      "description": "A campaign is generally used to send a one-off, timely email to some or all of your subscribers. For example you may use a campaign to send the latest edition of your weekly newsletter, or to announce a new feature in your product.\n"
    },
    {
      "name": "Contact",
      "description": "A contact represents an individual person within a list. For instance someone who has subscribed to your weekly newsletter.\nContacts contain essential information such as their email address, name and any additional data you have collected.\nContacts can also have tags, participate in automations and receive campaigns.\n"
    },
    {
      "name": "Field",
      "description": "Fields are custom data points associated with contacts within a specific list.\nYou can create additional fields to capture specific information about your contacts, such as birthday, location, age or dietary preferences. These fields can be useful for sending more personalised and targeted emails.\n"
    },
    {
      "name": "List",
      "description": "A list is a collection of contacts. Every one of your contacts will exist inside a list. The majority of our users only require one list, but multiple lists can be created and configured with different fields and tags in order to organise distinct groups of contacts.\n"
    },
    {
      "name": "Tag",
      "description": "Tags are list-specific labels that you can assign to contacts to categorise or segment them. Tags allow you to create personalised campaigns or trigger automations based on specific attributes or behaviours.\n"
    }
  ],
  "webhooks": {}
}
